}
plot_audio(freqs, l_aud_only, color = rgb(0,0,1), title = 'All Left Audios');
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.25), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
matplot(freqs,rowMeans(data_matrix),type = "l", lwd = 3, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n');
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
plot_audio(freqs,l_aud_nh,color = color_plt,title = 'Data Grouped by Hearing Status');
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.25), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix),type = "l", lwd = 3, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n');
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
plot_audio(freqs,l_aud_nh,color = color_plt,title = 'Data Grouped by Hearing Status');
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
plot_audio(freqs,r_aud_nh,color = color_plt, title = '');
plot_audio(freqs,l_aud_nh,color = color_plt,title = 'Data Grouped by Hearing Status');
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix),type = "l", lwd = 3, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n');
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
plot_audio(freqs,l_aud_nh,color = color_plt,title = 'Data Grouped by Hearing Status');
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix),type = "l", lwd = 4, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n');
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
plot_audio(freqs,l_aud_nh,color = color_plt,title = 'Data Grouped by Hearing Status');
matplot(freqs,rowMeans(data_matrix),type = "l", lwd = 5, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n');
plot_audio(freqs,l_aud_nh,color = color_plt,title = 'Data Grouped by Hearing Status');
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix),type = "l", lwd = 5, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n');
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
plot_audio(freqs, l_aud_only, color = rgb(0,0,1), title = 'All Left Audios');
#plot audiograms
freqs = c(250,500,1000,2000,4000,8000,16000)
freq_names = paste0("AC_",freqs)
l_aud_only = rbind(l_data$AC_250,l_data$AC_500,l_data$AC_1000,l_data$AC_2000,l_data$AC_4000,l_data$AC_8000,l_data$AC_16000)
r_aud_only = rbind(r_data$AC_250,r_data$AC_500,r_data$AC_1000,r_data$AC_2000,r_data$AC_4000,r_data$AC_8000,r_data$AC_16000)
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix),type = "l", lwd = 5, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n');
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
l_aud_only_t = t(l_aud_only);
colnames(l_aud_only_t) = freq_names;
r_aud_only_t = t(r_aud_only);
colnames(r_aud_only_t) = freq_names;
plot_audio(freqs, l_aud_only, color = rgb(0,0,1), title = 'All Left Audios');
plot_audio(freqs, r_aud_only, color = rgb(1,0,0), title = 'All Right Audios');
#Select only audios with
max_thresh = 25;
#return row IDs with 250-8k < 25 dB HL
rows_nh_r<- which(rowSums(r_aud_only_t[, 1:ncol(r_aud_only_t)-1] < max_thresh) == (ncol(r_aud_only_t) - 1))
rows_nh_l<- which(rowSums(l_aud_only_t[, 1:ncol(l_aud_only_t)-1] < max_thresh) == (ncol(l_aud_only_t) - 1))
#Trim dataset to normal hearing and hearing loss, I realize rows is actually referring to columns. Only doing this to plot more efficiently
l_aud_nh = l_aud_only[,rows_nh_l];
r_aud_nh = r_aud_only[,rows_nh_r];
#loss
l_aud_hl = l_aud_only[,-rows_nh_l];
r_aud_hl = r_aud_only[,-rows_nh_r];
color_plt = 'cyan4';
color_hl = 'brown';
plot_audio(freqs,l_aud_nh,color = color_plt,title = 'Data Grouped by Hearing Status');
par(new = TRUE)
plot_audio(freqs,r_aud_nh,color = color_plt, title = '');
par(new = TRUE)
l_aud_only = rbind(l_data$AC_250,l_data$AC_500,l_data$AC_1000,l_data$AC_2000,l_data$AC_4000,l_data$AC_8000,l_data$AC_16000)
r_aud_only = rbind(r_data$AC_250,r_data$AC_500,r_data$AC_1000,r_data$AC_2000,r_data$AC_4000,r_data$AC_8000,r_data$AC_16000)
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix),type = "l", lwd = 5, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n');
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
l_aud_only_t = t(l_aud_only);
colnames(l_aud_only_t) = freq_names;
r_aud_only_t = t(r_aud_only);
colnames(r_aud_only_t) = freq_names;
plot_audio(freqs, l_aud_only, color = rgb(0,0,1), title = 'All Left Audios');
plot_audio(freqs, r_aud_only, color = rgb(1,0,0), title = 'All Right Audios');
#Select only audios with
max_thresh = 25;
#return row IDs with 250-8k < 25 dB HL
rows_nh_r<- which(rowSums(r_aud_only_t[, 1:ncol(r_aud_only_t)-1] < max_thresh) == (ncol(r_aud_only_t) - 1))
rows_nh_l<- which(rowSums(l_aud_only_t[, 1:ncol(l_aud_only_t)-1] < max_thresh) == (ncol(l_aud_only_t) - 1))
#Trim dataset to normal hearing and hearing loss, I realize rows is actually referring to columns. Only doing this to plot more efficiently
l_aud_nh = l_aud_only[,rows_nh_l];
r_aud_nh = r_aud_only[,rows_nh_r];
#loss
l_aud_hl = l_aud_only[,-rows_nh_l];
r_aud_hl = r_aud_only[,-rows_nh_r];
color_plt = 'cyan4';
color_hl = 'brown';
plot_audio(freqs,l_aud_nh,color = color_plt,title = 'Data Grouped by Hearing Status');
par(new = TRUE)
plot_audio(freqs,r_aud_nh,color = color_plt, title = '');
par(new = TRUE)
plot_audio(freqs,r_aud_hl,color = color_hl, title = '');
par(new = TRUE)
plot_audio(freqs,l_aud_hl,color = color_hl, title = '');
#Trim dataset to impaired hearing
l_aud_
plot_audio(freqs,rbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
plot_audio(freqs,cbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
rowMeans(l_aud_nh)
rowMeans(r_aud_nh)
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix, na.rm=T),type = "l", lwd = 5, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n');
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
plot_audio(freqs,cbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
cbind(l_aud_nh,r_aud_nh)
ggplot(cbind(freqs,l_aud_nh), aes(x=1,y=2)))
ggplot(cbind(freqs,l_aud_nh), aes(x=1,y=2))
plot_audio(freqs,cbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
par(new = TRUE)
plot_audio(freqs,cbind(l_aud_hl,r_aud_hl),color = color_plt, title = '');
par(new = TRUE)
par(xpd=TRUE)
legend(2.8,-1,c("group A", "group B"), pch = c(1,2), lty = c(1,2))
plot_audio(freqs,cbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
par(new = TRUE)
plot_audio(freqs,cbind(l_aud_hl,r_aud_hl),color = color_hl, title = '');
par(new = TRUE)
par(xpd=TRUE)
legend(c('Data A', 'Data B'))
legend('TopRight',c('Data A', 'Data B'))
legend('topright',c('Data A', 'Data B'))
legend('topright',c('Data A', 'Data B'),col = c(color_plt,color_hl),lwd=3);
plot_audio(freqs,cbind(l_aud_hl,r_aud_hl),color = color_hl, title = '');
legend('topright',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=3);
plot_audio(freqs,cbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
par(new = TRUE)
plot_audio(freqs,cbind(l_aud_hl,r_aud_hl),color = color_hl, title = '');
legend('topright',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=3);
plot_audio(freqs,cbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
par(new = TRUE)
plot_audio(freqs,cbind(l_aud_hl,r_aud_hl),color = color_hl, title = '');
legend('topright',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=3);
legend('topright',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=3,cex=2);
legend('topright',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=5,cex=2);
legend('topright',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=5,cex=2,y.intersp=2);
legend('topright',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=5,cex=2,y.intersp=1.5);
legend('topright',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=5,cex=2,y.intersp=1.25);
legend('topright',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=5,cex=1.5,y.intersp=1.25);
#loss
l_aud_hl = l_aud_only[,-rows_nh_l];
r_aud_hl = r_aud_only[,-rows_nh_r];
color_plt = 'cyan4';
color_hl = 'brown';
plot_audio(freqs,cbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
par(new = TRUE)
plot_audio(freqs,cbind(l_aud_hl,r_aud_hl),color = color_hl, title = '');
legend('bottomleft',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=5,cex=1.5,y.intersp=1.25);
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix, na.rm=T),type = "l", lwd = 5, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n', xlab = 'n', ylab = "n");
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
color_plt = 'cyan4';
color_hl = 'brown';
plot_audio(freqs,cbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
par(new = TRUE)
plot_audio(freqs,cbind(l_aud_hl,r_aud_hl),color = color_hl, title = '');
legend('bottomleft',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=5,cex=1.5,y.intersp=1.25);
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix, na.rm=T),type = "l", lwd = 5, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n', xlab = "n", ylab = "n");
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
plot_audio(freqs,cbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
par(new = TRUE)
plot_audio(freqs,cbind(l_aud_hl,r_aud_hl),color = color_hl, title = '');
legend('bottomleft',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=5,cex=1.5,y.intersp=1.25);
#Trim dataset to impaired hearing
l_aud_
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix, na.rm=T),type = "l", lwd = 5, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n', xlab = "n", ylab = "n",yaxt='n');
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
plot_audio(freqs,cbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
par(new = TRUE)
plot_audio(freqs,cbind(l_aud_hl,r_aud_hl),color = color_hl, title = '');
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n", yaxt="n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix, na.rm=T),type = "l", lwd = 5, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n', xlab = "n", ylab = "n",yaxt="n");
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
l_aud_only_t = t(l_aud_only);
colnames(l_aud_only_t) = freq_names;
r_aud_only_t = t(r_aud_only);
colnames(r_aud_only_t) = freq_names;
plot_audio(freqs, l_aud_only, color = rgb(0,0,1), title = 'All Left Audios');
plot_audio(freqs, r_aud_only, color = rgb(1,0,0), title = 'All Right Audios');
#Select only audios with
max_thresh = 25;
#return row IDs with 250-8k < 25 dB HL
rows_nh_r<- which(rowSums(r_aud_only_t[, 1:ncol(r_aud_only_t)-1] < max_thresh) == (ncol(r_aud_only_t) - 1))
rows_nh_l<- which(rowSums(l_aud_only_t[, 1:ncol(l_aud_only_t)-1] < max_thresh) == (ncol(l_aud_only_t) - 1))
#Trim dataset to normal hearing and hearing loss, I realize rows is actually referring to columns. Only doing this to plot more efficiently
l_aud_nh = l_aud_only[,rows_nh_l];
r_aud_nh = r_aud_only[,rows_nh_r];
#loss
l_aud_hl = l_aud_only[,-rows_nh_l];
r_aud_hl = r_aud_only[,-rows_nh_r];
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n", yaxt="n");
par(new = TRUE)
# matplot(freqs,rowMeans(data_matrix, na.rm=T),type = "l", lwd = 5, col = color,lty=1, ylim = ylim, log = 'x',xaxt='n', xlab = "n", ylab = "n",yaxt="n");
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
l_aud_only_t = t(l_aud_only);
colnames(l_aud_only_t) = freq_names;
r_aud_only_t = t(r_aud_only);
colnames(r_aud_only_t) = freq_names;
plot_audio(freqs, l_aud_only, color = rgb(0,0,1), title = 'All Left Audios');
plot_audio <- function(freqs, data_matrix, color = rgb(0,0,1), ylim = c(100,-20), title = 'Audiogram'){
matplot(freqs,data_matrix,type = "l", lwd = 3, col = alpha(color, 0.15), lty=1, ylim = ylim, log = 'x',xlab = 'Frequency (Hz)', ylab = "Threshold (dB HL)", main = title, xaxt = "n", yaxt="n");
par(new = TRUE)
matplot(freqs,rowMeans(data_matrix, na.rm=T),type = "l", lwd = 5, col = color,lty=1, ylim = ylim, log = 'x', xaxt='n', xlab = "n", ylab = "Threshold (dB HL)",yaxt="n");
axis(side = 1, at = freqs)
abline(h = seq(-20,100,by=20), col = "gray", lty = 2);
abline(v = freqs, col = "gray", lty = 2);
}
l_aud_only_t = t(l_aud_only);
colnames(l_aud_only_t) = freq_names;
r_aud_only_t = t(r_aud_only);
colnames(r_aud_only_t) = freq_names;
plot_audio(freqs, l_aud_only, color = rgb(0,0,1), title = 'All Left Audios');
plot_audio(freqs, r_aud_only, color = rgb(1,0,0), title = 'All Right Audios');
#Select only audios with
max_thresh = 25;
#return row IDs with 250-8k < 25 dB HL
rows_nh_r<- which(rowSums(r_aud_only_t[, 1:ncol(r_aud_only_t)-1] < max_thresh) == (ncol(r_aud_only_t) - 1))
rows_nh_l<- which(rowSums(l_aud_only_t[, 1:ncol(l_aud_only_t)-1] < max_thresh) == (ncol(l_aud_only_t) - 1))
#Trim dataset to normal hearing and hearing loss, I realize rows is actually referring to columns. Only doing this to plot more efficiently
l_aud_nh = l_aud_only[,rows_nh_l];
r_aud_nh = r_aud_only[,rows_nh_r];
#loss
l_aud_hl = l_aud_only[,-rows_nh_l];
r_aud_hl = r_aud_only[,-rows_nh_r];
color_plt = 'cyan4';
color_hl = 'brown';
plot_audio(freqs,cbind(l_aud_nh,r_aud_nh),color = color_plt,title = 'Data Grouped by Hearing Status');
par(new = TRUE)
plot_audio(freqs,cbind(l_aud_hl,r_aud_hl),color = color_hl, title = '');
legend('bottomleft',c('Normal Hearing', 'Hearing Loss'),col = c(color_plt,color_hl),lwd=5,cex=1.5,y.intersp=1.25);
r_qs = r_data$QuickSIN;
l_qs = l_data$QuickSIN;
l_qs
plot(r_qs)
l_age = l_data$Age;
r_aud_only = rbind(r_data$AC_250,r_data$AC_500,r_data$AC_1000,r_data$AC_2000,r_data$AC_4000,r_data$AC_8000,r_data$AC_16000)
r_qs = r_data$QuickSIN;
r_age = r_data$Age;
plot(l_age,r_age)
plot(age,l_qs);
age = l_data$Age;
plot(l_age,r_age)
plot(age,l_qs);
plot(age,r_qs);
figure
plot(age(rows_nh_l),l_qs)
plot(age[rows_nh_l,],l_qs)
plot(age[rows_nh_l],l_qs)
length(age)
length(l_qs)
plot(age[rows_nh_l],l_qs[rows_nh_l])
plot(l_qs[rows_nh_l])
plot(l_qs[rows_hl_l])
plot(l_qs[-rows_nh_l])
plot(l_qs[rows_nh_l])
source("~/Documents/Code/ARDC/ARDC_Analysis/Big_Data_Analyses/figures_forHearingSeminar.R")
source("/mnt/20D22780D22758F4/Shared/Code/ARDC/ARDC_Analysis/Big_Data_Analyses/figures_forHearingSeminar.R", echo=TRUE)
source("/mnt/20D22780D22758F4/Shared/Code/ARDC/ARDC_Analysis/Big_Data_Analyses/figures_forHearingSeminar.R", echo=TRUE)
plot_oae <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=DPF2_6000, fill = hearingStatus, color = hearingStatus));
plot_oae+geom_violin(alpha = 0.1)+geom_boxplot(width=.1, alpha=0.7) + ylab("DPOAE | F2 Frequency 6kHz (dB SPL)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
source("~/Documents/Code/ARDC/ARDC_Analysis/Big_Data_Analyses/figures_forHearingSeminar.R")
plot_age+geom_boxplot(width=.1, alpha=0.7) + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_age+geom_boxplot(width=.1, alpha=05) + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_age+geom_boxplot(width=.1, alpha=0.5) + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_age+geom_boxplot(width=.1, alpha=0.5) + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.7)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_age+geom_boxplot(width=.3, alpha=0.5) + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.7)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_age+geom_boxplot(width=.25, alpha=0.5) + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.7)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_age <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=Age, fill = hearingStatus, color = hearingStatus));
plot_age+geom_boxplot(width=.25, alpha=0.5) + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.7)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_quickSin <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=QuickSIN, fill = hearingStatus, color = hearingStatus));
plot_quickSin+geom_violin(alpha = 0.1)+geom_boxplot(width=.1, alpha=0.7) + ylab("QuickSin (SNR Loss)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_reflex <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=REFLEX_CONTRA_500, fill = hearingStatus, color = hearingStatus));
plot_reflex+geom_violin(alpha = 0.1)+geom_boxplot(width=.1, alpha=0.7) + ylab("500 Hz | Contralateral Reflex Threshold") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_oae <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=DPF2_6000, fill = hearingStatus, color = hearingStatus));
plot_oae+geom_violin(alpha = 0.1)+geom_boxplot(width=.1, alpha=0.7) + ylab("DPOAE | F2 Frequency 6kHz (dB SPL)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_quickSin <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=QuickSIN, fill = hearingStatus, color = hearingStatus));
plot_quickSin+geom_boxplot(width=.25, alpha=0.5) + ylab("QuickSin (SNR Loss)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_reflex <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=REFLEX_CONTRA_500, fill = hearingStatus, color = hearingStatus));
plot_reflex+geom_boxplot(width=.25, alpha=0.5)+ ylab("500 Hz | Contralateral Reflex Threshold") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_oae <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=DPF2_6000, fill = hearingStatus, color = hearingStatus));
plot_oae+geom_boxplot(width=.25, alpha=0.5)+ ylab("DPOAE | F2 Frequency 6kHz (dB SPL)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=20))+theme(legend.position = "none");
plot_oae+geom_boxplot(width=.25, alpha=0.5)+ ylab("DPOAE | F2 Frequency 6kHz (dB SPL)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=25))+theme(legend.position = "none");
plot_oae+geom_boxplot(width=.25, alpha=0.5)+ ylab("DPOAE | F2 Frequency 6kHz (dB SPL)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=35))+theme(legend.position = "none");
plot_oae+geom_boxplot(width=.25, alpha=0.5)+ ylab("DPOAE | F2 Frequency 6kHz (dB SPL)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=30))+theme(legend.position = "none");
plot_oae+geom_boxplot(width=.25, alpha=0.5)+ ylab("DPOAE | F2 Frequency 6kHz (dB SPL)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=28))+theme(legend.position = "none");
setwd(cwd)
plot_oae+geom_boxplot(width=.25, alpha=0.5)+ ylab("DPOAE | F2 Frequency 6kHz (dB SPL)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=28))+theme(legend.position = "none");
setwd(cwd)
plot_age+geom_boxplot(width=.25, alpha=0.5) + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.7)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=28))+theme(legend.position = "none");
plot_quickSin <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=QuickSIN, fill = hearingStatus, color = hearingStatus));
plot_quickSin+geom_boxplot(width=.25, alpha=0.5) + ylab("QuickSin (SNR Loss)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=28))+theme(legend.position = "none");
source("~/Documents/Code/ARDC/ARDC_Analysis/Big_Data_Analyses/figures_forHearingSeminar.R")
save_plot_as_png(plot_age,'AGE_nhvhl.png');
#use this later
save_plot_as_png <- function(plot, file_name, width = 5, height = 5, dpi = 300) {
if (inherits(plot, "gg")) {
ggsave(
plot,
filename = file_name,
width = width,
height = height,
dpi = dpi
)
} else if (is.function(plot)) {
# Assuming it's a base R plot function
png(file_name, width = width, height = height, res = dpi)
plot()
dev.off()
} else {
stop("Unsupported plot type. Only ggplot2 or base R plots are supported.")
}
}
save_plot_as_png(plot_age,'AGE_nhvhl.png');
plot_age <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=Age, fill = hearingStatus, color = hearingStatus));
plot_age+geom_boxplot(width=.25, alpha=0.5) + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.7)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=28))+theme(legend.position = "none");
save_plot_as_png(plot_age,'AGE_nhvhl.png');
plot_age <- plot_age+geom_boxplot(width=.25, alpha=0.5) + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.7)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=28))+theme(legend.position = "none");
save_plot_as_png(plot_age,'AGE_nhvhl.png');
#use this later
save_plot_as_png <- function(plot, file_name, width = 10, height = 10, dpi = 300) {
if (inherits(plot, "gg")) {
ggsave(
plot,
filename = file_name,
width = width,
height = height,
dpi = dpi
)
} else if (is.function(plot)) {
# Assuming it's a base R plot function
png(file_name, width = width, height = height, res = dpi)
plot()
dev.off()
} else {
stop("Unsupported plot type. Only ggplot2 or base R plots are supported.")
}
}
#use this later
save_plot_as_png <- function(plot, file_name, width = 13, height = 10, dpi = 300) {
if (inherits(plot, "gg")) {
ggsave(
plot,
filename = file_name,
width = width,
height = height,
dpi = dpi
)
} else if (is.function(plot)) {
# Assuming it's a base R plot function
png(file_name, width = width, height = height, res = dpi)
plot()
dev.off()
} else {
stop("Unsupported plot type. Only ggplot2 or base R plots are supported.")
}
}
save_plot_as_png(plot_age,'AGE_nhvhl.png');
#use this later
save_plot_as_png <- function(plot, file_name, width = 11, height = 10, dpi = 300) {
if (inherits(plot, "gg")) {
ggsave(
plot,
filename = file_name,
width = width,
height = height,
dpi = dpi
)
} else if (is.function(plot)) {
# Assuming it's a base R plot function
png(file_name, width = width, height = height, res = dpi)
plot()
dev.off()
} else {
stop("Unsupported plot type. Only ggplot2 or base R plots are supported.")
}
}
save_plot_as_png(plot_age,'AGE_nhvhl.png');
#use this later
save_plot_as_png <- function(plot, file_name, width = 7, height = 6, dpi = 300) {
if (inherits(plot, "gg")) {
ggsave(
plot,
filename = file_name,
width = width,
height = height,
dpi = dpi
)
} else if (is.function(plot)) {
# Assuming it's a base R plot function
png(file_name, width = width, height = height, res = dpi)
plot()
dev.off()
} else {
stop("Unsupported plot type. Only ggplot2 or base R plots are supported.")
}
}
save_plot_as_png(plot_age,'AGE_nhvhl.png');
#use this later
save_plot_as_png <- function(plot, file_name, width = 8, height = 6, dpi = 300) {
if (inherits(plot, "gg")) {
ggsave(
plot,
filename = file_name,
width = width,
height = height,
dpi = dpi
)
} else if (is.function(plot)) {
# Assuming it's a base R plot function
png(file_name, width = width, height = height, res = dpi)
plot()
dev.off()
} else {
stop("Unsupported plot type. Only ggplot2 or base R plots are supported.")
}
}
save_plot_as_png(plot_age,'AGE_nhvhl.png');
#use this later
save_plot_as_png <- function(plot, file_name, width = 8, height = 7, dpi = 300) {
if (inherits(plot, "gg")) {
ggsave(
plot,
filename = file_name,
width = width,
height = height,
dpi = dpi
)
} else if (is.function(plot)) {
# Assuming it's a base R plot function
png(file_name, width = width, height = height, res = dpi)
plot()
dev.off()
} else {
stop("Unsupported plot type. Only ggplot2 or base R plots are supported.")
}
}
save_plot_as_png(plot_age,'AGE_nhvhl.png');
source("~/Documents/Code/ARDC/ARDC_Analysis/Big_Data_Analyses/figures_forHearingSeminar.R")
source("~/Documents/Code/ARDC/ARDC_Analysis/Big_Data_Analyses/figures_forHearingSeminar.R")
save_plot_as_png(plot_age,'age_nhvhl.png');
source("~/Documents/Code/ARDC/ARDC_Analysis/Big_Data_Analyses/figures_forHearingSeminar.R")
plot_oae <-plot_oae+geom_boxplot(width=.25, alpha=0.5)+ ylab("DPOAE | F2 Freq 6kHz (dB SPL)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=28))+theme(legend.position = "none");
plot_oae <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=DPF2_6000, fill = hearingStatus, color = hearingStatus));
plot_oae <-plot_oae+geom_boxplot(width=.25, alpha=0.5)+ ylab("DPOAE | F2 Freq 6kHz (dB SPL)") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=28))+theme(legend.position = "none");
save_plot_as_png(plot_oae,'oae_nhvhl.png');
source("~/Documents/Code/ARDC/ARDC_Analysis/Big_Data_Analyses/figures_forHearingSeminar.R")
plot_reflex <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=REFLEX_CONTRA_500, fill = hearingStatus, color = hearingStatus));
plot_reflex <- plot_reflex+geom_boxplot(width=.25, alpha=0.5)+ ylab("500 Hz | Contra. Reflex Threshold") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=28))+theme(legend.position = "none");
save_plot_as_png(plot_reflex,'reflex_nhvhl.png');
plot_reflex <- ggplot(merged_frame,aes(x=factor(hearingStatus, level = c("Normal Hearing", "Hearing Loss")),y=REFLEX_CONTRA_500, fill = hearingStatus, color = hearingStatus));
plot_reflex <- plot_reflex+geom_boxplot(width=.25, alpha=0.5)+ ylab("500 Hz | Contra. Reflex Threshold") + xlab('Hearing Status')+ geom_jitter(size=2,width = 0.35, alpha=0.5)+scale_color_manual(values=c(color_hl, color_plt))+scale_fill_manual(values=c(color_hl, color_plt))+theme(text=element_text(size=28))+theme(legend.position = "none");
save_plot_as_png(plot_reflex,'reflex_nhvhl.png');
source("~/Documents/Code/ARDC/ARDC_Analysis/Big_Data_Analyses/figures_forHearingSeminar.R")
